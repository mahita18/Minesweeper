/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.minesweeper;

import java.util.Random;


/**
 *
 * @author mahit
 */
public class Play extends javax.swing.JFrame {

    /**
     * Creates new form Play
     */    
    
    
    Tile[][] tileGrid;
    
    public Play() {
        initComponents();
        
        this.tileGrid = new Tile[6][6];
        
        for (int x=0; x<6; x++){
            for(int y=0; y<6; y++){
                Tile point = new Tile(this);                      
                tileGrid[x][y] = point;
                gridPanel.add(tileGrid[x][y].buttonListen());

            }
        }
        setMines();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogMessage = new javax.swing.JDialog();
        messagePanel = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        playPanel = new javax.swing.JPanel();
        gridPanel = new javax.swing.JPanel();

        dialogMessage.setMinimumSize(new java.awt.Dimension(290, 170));
        dialogMessage.setModal(true);
        dialogMessage.setPreferredSize(new java.awt.Dimension(290, 165));

        messagePanel.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout messagePanelLayout = new javax.swing.GroupLayout(messagePanel);
        messagePanel.setLayout(messagePanelLayout);
        messagePanelLayout.setHorizontalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        messagePanelLayout.setVerticalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(messageLabel)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogMessageLayout = new javax.swing.GroupLayout(dialogMessage.getContentPane());
        dialogMessage.getContentPane().setLayout(dialogMessageLayout);
        dialogMessageLayout.setHorizontalGroup(
            dialogMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogMessageLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(messagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        dialogMessageLayout.setVerticalGroup(
            dialogMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playPanel.setBackground(new java.awt.Color(204, 204, 255));
        playPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gridPanel.setBackground(new java.awt.Color(153, 153, 255));
        gridPanel.setLayout(new java.awt.GridLayout(6, 6, 1, 1));

        javax.swing.GroupLayout playPanelLayout = new javax.swing.GroupLayout(playPanel);
        playPanel.setLayout(playPanelLayout);
        playPanelLayout.setHorizontalGroup(
            playPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playPanelLayout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addComponent(gridPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );
        playPanelLayout.setVerticalGroup(
            playPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(gridPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(playPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(playPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Play().setVisible(true);
                                               
                
            }
        });
    }
    
    public void setMines(){
        Random rand = new Random();                
        int a = 0;
        int numMine = 8;
        int[][] bad = new int[numMine][2];
        boolean diff;

        while (a<numMine){
            diff = true;
            int valX = rand.nextInt(6);
            int valY = rand.nextInt(6);
            for(int[] item: bad){
                if (item[0]==valX && item[1]==valY)
                    diff = false;
            }
            if (diff){
                bad[a][0] = valX;
                bad[a][1] = valY;
                tileGrid[valY][valX].setType();
                a++;
                
                if (valY!=0){
                    tileGrid[valY-1][valX].addNearbyMine();
                    if (valX!=0)
                        tileGrid[valY-1][valX-1].addNearbyMine();
                    if (valX!=5)
                        tileGrid[valY-1][valX+1].addNearbyMine();
                }
                
                if (valY!=5){
                    tileGrid[valY+1][valX].addNearbyMine();
                    if (valX!=0)
                        tileGrid[valY+1][valX-1].addNearbyMine();
                    if (valX!=5)
                        tileGrid[valY+1][valX+1].addNearbyMine();
                }
                
                if (valX!=0)
                    tileGrid[valY][valX-1].addNearbyMine();
                if (valX!=5)
                    tileGrid[valY][valX+1].addNearbyMine();
            }
        }                
    }
    
    public void showMessage(String text){
        messageLabel.setText(text);
        dialogMessage.setVisible(true);
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog dialogMessage;
    private javax.swing.JPanel gridPanel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JPanel messagePanel;
    private javax.swing.JPanel playPanel;
    // End of variables declaration//GEN-END:variables
}
